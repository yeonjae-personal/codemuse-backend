<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Ui-group">

  <select id="retrieveOffrGrpList" resultType="com.lgcns.svcp.prod.ui.prod.dto.ItemMappingDto">
      <include refid="queryGroupsAdvanced"/>
  </select>
  
  <resultMap id="retrieveGroupsAdvancedWithDetailResultMap" type="com.lgcns.svcp.prod.ui.prod.dto.group.search.GroupSearchRes">
    <collection property="general"  column="{objUuid=obj_uuid}" select="Ui-item.retrieveGeneral"/>
    <collection property="additional"  column="{objUuid=obj_uuid}" select="retrieveAdditional"/>
  </resultMap>
  
  <select id="retrieveOffrGrpListExcel" resultType="com.lgcns.svcp.prod.ui.prod.dto.group.search.GroupSearchRes">
      <include refid="queryGroupsAdvanced"/>
  </select>

  <select id="retrieveGroupsAdvancedDetail" resultMap="retrieveGroupsAdvancedWithDetailResultMap">
    <include refid="queryGroupsAdvanced"/>
  </select>
  
  <sql id="queryGroupsAdvanced">
  	SELECT
          a.obj_uuid,
          a.obj_code,
          a.obj_name,
          a.item_code,
          a.valid_start_dtm,
          a.valid_end_dtm
      FROM tb_item_mpng_d a
      JOIN tb_item_c b ON a.item_code = b.item_code
      <where>
          b.lctgr_item_code = 'G'
          <if test="itemCode != null and itemCode != ''">
              AND b.item_code = #{itemCode}
          </if>
          <if test="offrGrpCd != null and offrGrpCd != ''">
              AND UPPER(a.obj_code) LIKE '%' || UPPER(#{offrGrpCd}) || '%'
          </if>
          <if test="offrGrpNm != null and offrGrpNm != ''">
              AND UPPER(a.obj_name) LIKE '%' || UPPER(#{offrGrpNm}) || '%'
          </if>
          <if test="childOffrUuid != null and childOffrUuid != ''">
              AND a.obj_uuid IN (
                  SELECT c.offer_group_uuid
                  FROM tb_offer_group_rel_d c
                  WHERE c.offer_uuid = #{childOffrUuid}
                  <if test="onlyValidDtm">
                      AND (c.valid_end_dtm IS NULL OR c.valid_end_dtm >= CURRENT_TIMESTAMP)
                  </if>
              )
          </if>
          <if test="onlyValidDtm">
              AND (a.valid_end_dtm IS NULL OR a.valid_end_dtm >= CURRENT_TIMESTAMP)
          </if>
      </where>
  </sql>

  <insert id="insertOfferGroupRel">
    INSERT INTO tb_offer_group_rel_d (
        offer_group_uuid,
        offer_uuid,
        valid_start_dtm,
        valid_end_dtm,
        rgst_user,
        rgst_dtm,
        upd_user,
        upd_dtm
    )
    VALUES (
        #{groupUuid},
        #{offerUuid},
        #{validStartDtm}::TIMESTAMP,
        #{validEndDtm}::TIMESTAMP,
        #{rgstUser},
        CURRENT_TIMESTAMP,
        #{updUser},
        CURRENT_TIMESTAMP
    )
    ON CONFLICT (offer_group_uuid, offer_uuid)
    DO UPDATE SET
        valid_end_dtm = EXCLUDED.valid_end_dtm,
        upd_user = EXCLUDED.upd_user,
        upd_dtm = CURRENT_TIMESTAMP;
  </insert>

  <select id="retrieveAdditional" resultType="com.lgcns.svcp.prod.ui.prod.dto.common.metadata.AdditionalDetailDto">
    SELECT
    a.attr_uuid
    , a.item_code
    , a.field_type_code
    , a.comm_group_code
    , a.attr_ref_table_name
    , a.sort_no
    , a.attr_max_length
    , a.required_yn
    , a.label_id
    , d.label_dscr
    , a.disp_tab
    , a.adv_search_yn
    , CASE
    WHEN a.field_type_code = 'DM' then (
    SELECT
    COALESCE(JSON_ARRAYAGG(attr_val ORDER BY attr_seq), '[]')::text AS attr_val
    FROM tb_multi_code_add_attr_val_d
    WHERE
    attr_uuid = a.attr_uuid
    AND obj_uuid = b.obj_uuid
    )
    ELSE c.attr_val
    END AS attr_val
    , CASE
    WHEN a.field_type_code = 'OB' then (
    SELECT
    ob_name
    FROM
    (SELECT
    obj_uuid AS ob_code
    , obj_name AS ob_name
    FROM tb_item_mpng_d
    UNION
    SELECT
    matrix_code AS ob_code
    , matrix_code_name AS ob_name
    FROM tb_matrix_m
    ) AS combined
    WHERE
    ob_code =  c.attr_val
    )
    ELSE NULL
    END AS ob_name
    FROM tb_add_attr_header_m a JOIN tb_item_mpng_d b ON b.item_code = a.item_code
    LEFT JOIN tb_offer_group_add_attr_val_d c ON a.attr_uuid = c.attr_uuid AND c.obj_uuid = b.obj_uuid
    LEFT JOIN tb_multi_lang_label_m d ON a.label_id = d.label_id AND d.lang_code = COALESCE(#{langCode}, 'en')
    WHERE
    a.use_yn = 'Y'
    and  b.obj_uuid = #{objUuid}
    ORDER BY
    a.sort_no
  </select>
  
  <select id="retrieveAdditionals" resultType="com.lgcns.svcp.prod.ui.prod.dto.common.metadata.AdditionalDetailDto">
    SELECT
    b.obj_uuid
    ,a.attr_uuid
    , a.item_code
    , a.field_type_code
    , a.comm_group_code
    , a.attr_ref_table_name
    , a.sort_no
    , a.attr_max_length
    , a.required_yn
    , a.label_id
    , a.disp_tab
    , a.adv_search_yn
    , CASE
    WHEN a.field_type_code = 'DM' then (
    SELECT
    STRING_AGG(attr_val, ';' ORDER BY attr_seq) AS attr_val
    FROM tb_multi_code_add_attr_val_d
    WHERE
    attr_uuid = a.attr_uuid
    AND obj_uuid = b.obj_uuid
    )
    ELSE c.attr_val
    END AS attr_val
    , CASE
    WHEN a.field_type_code = 'OB' then (
    SELECT
    ob_name
    FROM
    (SELECT
    obj_uuid AS ob_code
    , obj_name AS ob_name
    FROM tb_item_mpng_d
    UNION
    SELECT
    matrix_code AS ob_code
    , matrix_code_name AS ob_name
    FROM tb_matrix_m
    ) AS combined
    WHERE
    ob_code =  c.attr_val
    )
    ELSE NULL
    END AS ob_name
    FROM tb_add_attr_header_m a
    JOIN tb_item_mpng_d b
    ON b.item_code = a.item_code
    LEFT JOIN tb_offer_group_add_attr_val_d c
    ON a.attr_uuid = c.attr_uuid
    AND c.obj_uuid = b.obj_uuid
    WHERE
    a.use_yn = 'Y'
    AND b.obj_uuid IN
    <foreach item='uuid' collection='objUuids' open='(' separator=',' close=")">
      #{uuid}
    </foreach>
    ORDER BY
    a.sort_no
  </select>

  <insert id="saveAdditionalMetadata">
    INSERT INTO tb_offer_group_add_attr_val_d (
    obj_uuid,
    attr_uuid,
    attr_val,
    rgst_user,
    rgst_dtm,
    upd_user,
    upd_dtm
    )
    VALUES (
    #{objUuid},
    #{attrUuid},
    #{attrVal},
    #{rgstUser},
    CURRENT_TIMESTAMP,
    #{updUser},
    CURRENT_TIMESTAMP
    ) ON CONFLICT (obj_uuid, attr_uuid) DO UPDATE SET attr_val = EXCLUDED.attr_val,
    upd_user = EXCLUDED.upd_user,
    upd_dtm = CURRENT_TIMESTAMP
  </insert>

  <select id="getItemOffr" resultType="com.lgcns.svcp.prod.ui.prod.dto.extend.ItemOffrResDto">
    SELECT
    b.obj_uuid AS offr_uuid
    , b.obj_code AS offr_cd
    , b.obj_name AS offr_nm
    , c.item_code_name AS offr_type
    , a.valid_start_dtm
    , a.valid_end_dtm
    , b.valid_start_dtm AS item_valid_start_dtm
    , b.valid_end_dtm AS item_valid_end_dtm
    FROM tb_offer_group_rel_d a
    JOIN tb_item_mpng_d b
    ON a.offer_uuid = b.obj_uuid
    JOIN tb_item_c c
    ON b.item_code = c.item_code
    WHERE
    a.offer_group_uuid = #{offerGroupUuid}
    ORDER BY
    a.upd_dtm DESC
    , a.rgst_dtm DESC
  </select>
  
  <select id="getItemOffrStructureExcel" resultType="com.lgcns.svcp.prod.ui.prod.dto.export.GroupStructureExportDto">
    SELECT
    d.obj_code as group_code
    ,d.obj_name as group_name
    , b.obj_code AS offer_code
    , b.obj_name as offer_name
    , TO_CHAR(a.valid_start_dtm, 'YYYY-MM-DD HH24:MI:SS') AS startDate
    , TO_CHAR(a.valid_end_dtm, 'YYYY-MM-DD HH24:MI:SS') AS finishDate
    , b.valid_start_dtm AS item_valid_start_dtm
    , b.valid_end_dtm AS item_valid_end_dtm
    FROM tb_offer_group_rel_d a
    JOIN tb_item_mpng_d b ON a.offer_uuid = b.obj_uuid
    JOIN tb_item_mpng_d d ON a.offer_group_uuid = d.obj_uuid
    JOIN tb_item_c c
    ON b.item_code = c.item_code
    WHERE a.offer_group_uuid IN
    <foreach item='uuid' collection='objUuids' open='(' separator=',' close=")">
      #{uuid}
    </foreach>
  </select>
  
  <select id="getItemOffrRelationManager" resultType="com.lgcns.svcp.prod.ui.prod.dto.extend.RelationGridViewDto">
    SELECT
    d.obj_code as group_code
    , d.obj_name as group_name
    , b.obj_code AS follower_code
    , b.obj_name as follower_name
    , a.valid_start_dtm
    , a.valid_end_dtm
    , b.valid_start_dtm 
    , b.valid_end_dtm
    FROM tb_offer_group_rel_d a
    JOIN tb_item_mpng_d b ON a.offer_uuid = b.obj_uuid
    JOIN tb_item_mpng_d d ON a.offer_group_uuid = d.obj_uuid
    JOIN tb_item_c c
    ON b.item_code = c.item_code
    WHERE a.offer_group_uuid IN
    <foreach item='uuid' collection='objUuids' open='(' separator=',' close=")">
      #{uuid}
    </foreach>
  </select>

  <select id="getItemOffrs" resultType="com.lgcns.svcp.prod.ui.prod.dto.extend.ItemOffrResDto">
    SELECT
    b.obj_uuid AS offr_uuid
    , b.obj_code AS offr_cd
    , b.obj_name AS offr_nm
    , c.item_code_name AS offr_type
    , a.valid_start_dtm
    , a.valid_end_dtm
    , b.valid_start_dtm AS item_valid_start_dtm
    , b.valid_end_dtm AS item_valid_end_dtm
    , a.offer_group_uuid
    FROM tb_offer_group_rel_d a
    JOIN tb_item_mpng_d b
    ON a.offer_uuid = b.obj_uuid
    JOIN tb_item_c c
    ON b.item_code = c.item_code
    WHERE
    a.offer_group_uuid IN
    <foreach collection='offerGroupUuids' item='uuid' open='(' separator=',' close=")">
    #{uuid}
    </foreach>
    ORDER BY
    a.upd_dtm DESC
    , a.rgst_dtm DESC
  </select>

</mapper>