<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Ui-offer">

  <resultMap id="retrieveItemsResultMap" type="com.lgcns.svcp.prod.ui.prod.dto.ProdStruDWithItemsMDto">
    <association property="baseProdItemCount" column="{trgtUuid=trgt_uuid_count}"  select="Ui-impact.getBaseProdItemCount"/>
    <association property="trgtProdItemCount" column="{baseUuid=base_uuid_count}"  select="Ui-impact.getTrgtProdItemCount"/>
  </resultMap>

 <select id="retrieveProdStruDWithItemsMListWithPartiotion" resultMap="retrieveItemsResultMap">
	  SELECT
	    s.base_uuid,
	    s.trgt_uuid,
	    s.base_prod_item_cd,
	    s.base_prod_item_nm,
	    s.trgt_prod_item_cd,
	    s.trgt_prod_item_nm,
	    s.valid_start_dtm,
	    s.valid_end_dtm,
	    s.item_valid_start_dtm,
	    s.item_valid_end_dtm,
	    s.rgst_user,
	    s.rgst_dtm,
	    s.upd_user,
	    s.upd_dtm,
	    s.trgt_item_code,
	    s.trgt_item_name,
	    s.trgt_type_code,
	    s.trgt_type_name,
	    s.trgt_sub_type_code,
	    s.trgt_sub_type_name,
	    s.base_item_code,
	    s.base_item_name,
	    s.base_type_code,
	    s.base_type_name,
	    s.base_sub_type_code,
	    s.base_sub_type_name,
	    s.sort_no,
	    s.base_uuid AS trgt_uuid_count,
	    s.trgt_uuid AS base_uuid_count
	  FROM (
	    SELECT
	      a.*,
	      ROW_NUMBER() OVER (PARTITION BY a.base_uuid, a.trgt_uuid ORDER BY a.upd_dtm DESC) AS row_num,
	      c.obj_code AS base_prod_item_cd,
	      c.obj_name AS base_prod_item_nm,
	      b.obj_code AS trgt_prod_item_cd,
	      b.obj_name AS trgt_prod_item_nm,
	      <choose>
	        <when test="baseUuid != null">
	          b.valid_start_dtm AS item_valid_start_dtm,
	          b.valid_end_dtm AS item_valid_end_dtm,
	        </when>
	        <when test="trgtUuid != null">
	          c.valid_start_dtm AS item_valid_start_dtm,
	          c.valid_end_dtm AS item_valid_end_dtm,
	        </when>
	      </choose>
	      f.lctgr_item_code AS trgt_item_code,
	      f.lctgr_item_name AS trgt_item_name,
	      e.mctgr_item_code AS trgt_type_code,
	      e.mctgr_item_name AS trgt_type_name,
	      d.item_code AS trgt_sub_type_code,
	      d.item_code_name AS trgt_sub_type_name,
	      i.lctgr_item_code AS base_item_code,
	      i.lctgr_item_name AS base_item_name,
	      h.mctgr_item_code AS base_type_code,
	      h.mctgr_item_name AS base_type_name,
	      g.item_code AS base_sub_type_code,
	      g.item_code_name AS base_sub_type_name,
	      d.sort_no
	    FROM tb_offer_strc_d a
	    JOIN tb_item_mpng_d b ON a.trgt_uuid = b.obj_uuid
	    JOIN tb_item_mpng_d c ON a.base_uuid = c.obj_uuid
	    JOIN tb_item_c d ON b.item_code = d.item_code
	    JOIN tb_mctgr_item_c e ON e.mctgr_item_code = d.mctgr_item_code
	    JOIN tb_lctgr_item_c f ON f.lctgr_item_code = e.lctgr_item_code
	    JOIN tb_item_c g ON c.item_code = g.item_code
	    JOIN tb_mctgr_item_c h ON h.mctgr_item_code = g.mctgr_item_code
	    JOIN tb_lctgr_item_c i ON i.lctgr_item_code = h.lctgr_item_code
	    <where>
	      <if test="baseUuid != null">
	        AND a.base_uuid = #{baseUuid}
	      </if>
	      <if test="trgtUuid != null">
	        AND a.trgt_uuid = #{trgtUuid}
	      </if>
	    </where>
	  ) s
	  WHERE s.row_num = 1
	  GROUP BY
	    s.base_uuid,
	    s.trgt_uuid,
	    s.base_prod_item_cd,
	    s.base_prod_item_nm,
	    s.trgt_prod_item_cd,
	    s.trgt_prod_item_nm,
	    s.valid_start_dtm,
	    s.valid_end_dtm,
	    s.item_valid_start_dtm,
	    s.item_valid_end_dtm,
	    s.rgst_user,
	    s.rgst_dtm,
	    s.upd_user,
	    s.upd_dtm,
	    s.trgt_item_code,
	    s.trgt_item_name,
	    s.trgt_type_code,
	    s.trgt_type_name,
	    s.trgt_sub_type_code,
	    s.trgt_sub_type_name,
	    s.base_item_code,
	    s.base_item_name,
	    s.base_type_code,
	    s.base_type_name,
	    s.base_sub_type_code,
	    s.base_sub_type_name,
	    s.sort_no
	</select>

  <select id="selectSearchResultCount" resultType="int">
    select
    count(*)
    FROM tb_prod_m
    where 1 = 1
    <if test="prodCd != null">
      and prod_cd LIKE <![CDATA[ '%' || #{prodCd} || '%']]>
    </if>
    <if test="prodNm != null">
      and prod_nm LIKE <![CDATA[ '%' || #{prodNm} || '%']]>
    </if>
    <if test = "prodKdCd != null">
      and prod_kd_cd = #{prodKdCd
    </if>
  </select>

  <select id="getPricePlanAdditionalMetaData" resultType="com.lgcns.svcp.prod.ui.prod.dto.common.AdditionalCreateDto">
    <![CDATA[
    SELECT
      attr_uuid
         , attr_lclang_name AS attr_nm
         , field_type_code
    FROM tb_add_attr_header_m
    ORDER BY
      sort_no
    ]]>
  </select>

  <select id="retrieveEqipTrmM" resultType="com.lgcns.svcp.prod.ui.prod.dto.offer.EqipTrmMDto">
    <![CDATA[
    SELECT prod_uuid,
           eqip_trm_cd,
           eqip_trm_nm,
           eqip_trm_kd_cd,
           eqip_trm_all_nm,
           manf_cd,
           dvic_no,
           eqip_trm_knd_cd,
           dvic_isu_yymm,
           flt_excg_psbl_yn,
           rent_psbl_yn,
           dvic_enpr_divs_cd,
           eqip_trm_divs_cd,
           biz_dtbn_lkge_yn,
           body_acso_divs_cd,
           eqip_trm_natv_cd,
           lnwl_clss_cd,
           wrls_trm_kd_cd,
           fscp_trm_yn,
           trm_cout_scdl_dtm,
           eqip_trm_vald_strt_dtm,
           eqip_trm_vald_end_dtm,
           rgst_usr,
           rgst_dtm,
           upd_usr,
           upd_dtm
    FROM tb_eqip_trm_m
    WHERE eqip_trm_cd = #{eqipTrmCd}
    ]]>
  </select>


  <update id="updateProdM">
    UPDATE tb_prod_m_tmp a
    JOIN tb_prod_dscr_m_tmp b on a.prod_cd = b.prod_item_cd
    <set>
      <if test="prodNm != null">
        a.prod_nm = #{prodNm},
      </if>
      <if test="prodKdCd != null">
        a.prod_kd_cd = #{prodKdCd},
      </if>
      <if test="custKdCd != null">
        a.cust_kd_cd = #{custKdCd},
      </if>
      <if test="prodAgeDivsCd != null">
        a.prod_age_divs_cd = #{prodAgeDivsCd},
      </if>
      <if test="saleValdStrtDtm != null">
        a.sale_vald_strt_dtm = #{saleValdStrtDtm},
      </if>
      <if test="saleValdEndDtm != null">
        a.sale_vald_end_dtm = #{saleValdEndDtm},
      </if>
      <if test="smsNotiYn != null">
        a.sms_noti_yn = #{smsNotiYn},
      </if>
      <if test="prodGrdCd != null">
        a.prod_grd_cd = #{prodGrdCd},
      </if>
      <if test="expyImpsbTermDays != null">
        a.expy_impsb_term_days = #{expyImpsbTermDays},
      </if>
      <if test="rjnImpsbTermDays != null">
        a.rjn_impsb_term_days = #{rjnImpsbTermDays},
      </if>
      <if test="mbspDcntRqstPsblYn != null">
        a.mbsp_dcnt_rqst_psbl_yn = #{mbspDcntRqstPsblYn},
      </if>
      <if test="overView != null">
        <![CDATA[
    b.prod_ovrv = #{overView},
    ]]>
      </if>
      <if test="comment != null">
        <![CDATA[
    b.prod_cmnt = #{comment},
    ]]>
      </if>
      a.upd_dtm = CURRENT_TIMESTAMP,
      b.upd_dtm = CURRENT_TIMESTAMP,
      a.upd_usr = 'UI',
      b.upd_usr = 'UI'
    </set>
    where b.prod_item_cd = #{prodCd}
  </update>

  <resultMap id="retrieveOfferWithDetailResultMap" type="com.lgcns.svcp.prod.ui.prod.dto.offer.SearchGroupWithDetailResDto">
    <collection property="general"  column="{objUuid=offer_uuid}" select="Ui-item.retrieveGeneral"/>
    <collection property="additional"  column="{objUuid=offer_uuid}" select="getOfferAdditionalDetail"/>
  </resultMap>

  <select id="retrieveOfferWithDetail" resultMap="retrieveOfferWithDetailResultMap">
    SELECT
    a.obj_uuid  as offer_uuid,
    a.obj_code as offer_code,
    a.obj_name as offer_name,
    b.item_code_name as offer_type
    FROM tb_item_mpng_d a
    JOIN tb_item_c b ON a.item_code = b.item_code
    <where>
      b.lctgr_item_code = 'O'
      <if test="offerType != null">
        AND b.item_code_name = #{offerType}
      </if>
      <if test="offerCode != null">
        AND a.obj_code LIKE <![CDATA[ '%' || #{offerCode} || '%']]>
      </if>
      <if test="offerName != null">
        AND a.obj_name LIKE <![CDATA[ '%' || #{offerName} || '%']]>
      </if>
    </where>
  </select>

  <select id="countAllOffer" resultType="integer">
    SELECT COUNT(1)
    FROM tb_item_mpng_d im
    JOIN tb_item_c i ON im.item_code = i.item_code
    JOIN tb_mctgr_item_c mi ON i.mctgr_item_code = mi.mctgr_item_code
    WHERE mi.lctgr_item_code = 'O'
    <if test="onlyValidDtm">
      AND (im.valid_end_dtm IS NULL OR im.valid_end_dtm::TIMESTAMP >= CURRENT_TIMESTAMP)
    </if>
  </select>








  <select id="getAllOffers" resultType="com.lgcns.svcp.prod.ui.prod.dto.ItemMappingDto">
    SELECT
    a.obj_uuid
    , a.obj_code
    , a.obj_name
    , a.item_code
    , a.valid_start_dtm
    , a.valid_end_dtm
    FROM tb_item_mpng_d a
    JOIN tb_item_c b ON a.item_code = b.item_code
    WHERE
    b.lctgr_item_code  = 'O'
    <if test="itemCode != null and itemCode != 'All'">
      AND a.item_code = #{itemCode}
    </if>
    <if test="objCode != null">
      AND a.obj_code LIKE <![CDATA[ '%' || UPPER(#{objCode}) || '%']]>
    </if>
    <if test="objName != null">
      AND UPPER(a.obj_name) LIKE <![CDATA[ '%' || UPPER(#{objName}) || '%']]>
    </if>
    <if test="onlyValidDtm">
      AND (a.valid_end_dtm IS NULL OR a.valid_end_dtm >= CURRENT_TIMESTAMP)
    </if>
    ORDER BY a.rgst_dtm
  </select>



  <insert id="saveOfferAdditional">
    INSERT INTO tb_offer_add_attr_val_d (obj_uuid,
                                         attr_uuid,
                                         attr_val,
                                         rgst_user,
                                         rgst_dtm,
                                         upd_user,
                                         upd_dtm)
    VALUES (#{objUuid},
            #{attrUuid},
            #{attrVal},
            #{rgstUser},
            CURRENT_TIMESTAMP,
            #{updUser},
            CURRENT_TIMESTAMP) ON CONFLICT (obj_uuid, attr_uuid) DO
    UPDATE
      SET
        attr_val = EXCLUDED.attr_val, upd_user = EXCLUDED.upd_user, upd_dtm = CURRENT_TIMESTAMP
  </insert>

  <select id="getOfferAdditionalDetails"
          resultType="com.lgcns.svcp.prod.ui.prod.dto.common.metadata.AdditionalDetailDto">
    SELECT
    b.obj_uuid
    , a.attr_uuid
    , a.item_code
    , a.field_type_code
    , a.comm_group_code
    , a.attr_ref_table_name
    , a.sort_no
    , a.use_yn
    , a.attr_max_length
    , a.required_yn
    , a.label_id
    , a.disp_tab
    , a.disp_card_yn
    , a.adv_search_yn
    , CASE
    WHEN a.field_type_code = 'DM' THEN (
    SELECT
    STRING_AGG(attr_val, ';' ORDER BY attr_seq) AS attr_val
    FROM tb_multi_code_add_attr_val_d
    WHERE
    attr_uuid = a.attr_uuid
    AND obj_uuid = b.obj_uuid
    )
    ELSE c.attr_val
    END AS attr_val
    , CASE
    WHEN a.field_type_code = 'OB' THEN (
    SELECT
    ob_name
    FROM
    (SELECT
    obj_uuid AS ob_code
    , obj_name AS ob_name
    FROM tb_item_mpng_d
    UNION
    SELECT
    matrix_code AS ob_code
    , matrix_code_name AS ob_name
    FROM tb_matrix_m
    ) AS combined
    WHERE
    ob_code = c.attr_val
    )
    ELSE NULL
    END AS ob_name
    , d.label_name
    FROM tb_add_attr_header_m a
    JOIN tb_item_mpng_d b
    ON b.item_code = a.item_code
    AND b.obj_uuid IN
    <foreach item='uuid' collection='objUuids' open='(' separator=',' close=")">
      #{uuid}
    </foreach>
    LEFT JOIN tb_offer_add_attr_val_d c
    ON a.attr_uuid = c.attr_uuid
    AND c.obj_uuid = b.obj_uuid
    LEFT JOIN tb_multi_lang_label_m d ON a.label_id = d.label_id AND d.lang_code = COALESCE(#{langCode}, 'en')
    WHERE
    a.use_yn = 'Y'
    ORDER BY
    a.sort_no
  </select>

  <select id="getOfferAdditionalDetail"
          resultType="com.lgcns.svcp.prod.ui.prod.dto.common.metadata.AdditionalDetailDto">
    SELECT b.obj_uuid
         , a.attr_uuid
         , a.item_code
         , a.field_type_code
         , a.comm_group_code
         , a.attr_ref_table_name
         , a.sort_no
         , a.use_yn
         , a.attr_max_length
         , a.required_yn
         , a.label_id
         , d.label_dscr
         , a.disp_tab
         , a.disp_card_yn
         , a.adv_search_yn
         , CASE
             WHEN a.field_type_code = 'DM'
               then (SELECT COALESCE(json_agg(attr_val ORDER BY attr_seq)::text, '[]') AS attr_val
                     FROM tb_multi_code_add_attr_val_d
                     WHERE attr_uuid = a.attr_uuid
                       AND obj_uuid = b.obj_uuid)
             ELSE c.attr_val
      END AS attr_val
         , CASE
             WHEN a.field_type_code = 'OB' then (SELECT ob_name
                                                 FROM (SELECT obj_uuid AS ob_code
                                                            , obj_name AS ob_name
                                                       FROM tb_item_mpng_d
                                                       UNION
                                                       SELECT matrix_code      AS ob_code
                                                            , matrix_code_name AS ob_name
                                                       FROM tb_matrix_m) AS combined
                                                 WHERE ob_code = c.attr_val)
             ELSE NULL
      END AS ob_name
    FROM tb_add_attr_header_m a JOIN tb_item_mpng_d b ON b.item_code = a.item_code AND b.obj_uuid = #{objUuid}
    LEFT JOIN tb_offer_add_attr_val_d c ON a.attr_uuid = c.attr_uuid AND c.obj_uuid = b.obj_uuid
    LEFT JOIN tb_multi_lang_label_m d ON a.label_id = d.label_id AND d.lang_code = COALESCE(#{langCode}, 'en') 
    WHERE a.use_yn = 'Y'
    ORDER BY a.sort_no
  </select>

  <update id="updateOfferComponentRelationDate">
    UPDATE tb_offer_strc_d
    <set>
        valid_end_dtm = #{validEndDtm}::TIMESTAMP,
        upd_user = #{updUser},
        upd_dtm = CURRENT_TIMESTAMP
    </set>
    WHERE base_uuid = #{objUuid}
    <if test="validEndDtm != null">
        AND ((valid_end_dtm > #{validEndDtm}::TIMESTAMP) OR valid_end_dtm IS NULL)
    </if>
  </update>

  <select id="getComponentForOfferStructureDetail"
          resultType="com.lgcns.svcp.prod.ui.prod.dto.offer.structure.OfferStructureComponent">
    SELECT
    d.mctgr_item_code
    , d.mctgr_item_name
    , c.item_code
    , c.item_code_name
    , e.obj_uuid
    , e.obj_code
    , e.obj_name
    , e.valid_start_dtm
    , e.valid_end_dtm
    , e.relation_valid_start_dtm
    , e.relation_valid_end_dtm
    , b.strc_type_code
    FROM tb_item_mpng_d a
    JOIN tb_item_strc_d b ON a.item_code = b.base_item_code
    JOIN tb_item_c c ON b.trgt_item_code = c.item_code
    JOIN tb_mctgr_item_c d ON c.mctgr_item_code = d.mctgr_item_code
    LEFT JOIN (
    SELECT
    f.obj_uuid
    , f.obj_code
    , f.obj_name
    , e.base_uuid
    , f.item_code
    , f.valid_start_dtm
    , f.valid_end_dtm
    , e.valid_start_dtm AS relation_valid_start_dtm
    , e.valid_end_dtm AS relation_valid_end_dtm
    FROM tb_offer_strc_d e
    JOIN tb_item_mpng_d f ON e.trgt_uuid = f.obj_uuid
    <if test="onlyValidDtm">
      WHERE
      (e.valid_end_dtm IS NULL OR e.valid_end_dtm >= CURRENT_TIMESTAMP)
      AND (f.valid_end_dtm IS NULL OR f.valid_end_dtm >= CURRENT_TIMESTAMP)
    </if>
    ) AS e ON a.obj_uuid = e.base_uuid AND e.item_code = b.trgt_item_code
    WHERE
    d.use_yn = 'Y'
    AND c.use_yn = 'Y'
    AND a.obj_uuid = #{objUuid}
    ORDER BY
    d.sort_no
    , c.sort_no
  </select>
  
  <select id="getComponentForOfferStructureDetails"
          resultType="com.lgcns.svcp.prod.ui.prod.dto.export.OfferStructureExportDto">
    SELECT
    a.obj_code as offerCode
	,a.obj_name as offerName
    ,d.mctgr_item_code as componentTypeCode
    , d.mctgr_item_name as componentTypeName
    , c.item_code as componentSubTypeCode
    , c.item_code_name componentSubTypeName
    , e.obj_code as componentCode
    , e.obj_name as componentName
    ,TO_CHAR(e.valid_start_dtm, 'YYYY-MM-DD HH24:MI:SS') AS startDate
    ,TO_CHAR(e.valid_end_dtm, 'YYYY-MM-DD HH24:MI:SS') AS finishDate
    FROM tb_item_mpng_d a
    JOIN tb_item_strc_d b ON a.item_code = b.base_item_code
    JOIN tb_item_c c ON b.trgt_item_code = c.item_code
    JOIN tb_mctgr_item_c d ON c.mctgr_item_code = d.mctgr_item_code
    LEFT JOIN (
    SELECT
    f.obj_uuid
    , f.obj_code
    , f.obj_name
    , e.base_uuid
    , f.item_code
    , f.valid_start_dtm
    , f.valid_end_dtm
    , e.valid_start_dtm AS relation_valid_start_dtm
    , e.valid_end_dtm AS relation_valid_end_dtm
    FROM tb_offer_strc_d e
    JOIN tb_item_mpng_d f ON e.trgt_uuid = f.obj_uuid
    <if test="onlyValidDtm">
      WHERE
      (e.valid_end_dtm IS NULL OR e.valid_end_dtm >= CURRENT_TIMESTAMP)
      AND (f.valid_end_dtm IS NULL OR f.valid_end_dtm >= CURRENT_TIMESTAMP)
    </if>
    ) AS e ON a.obj_uuid = e.base_uuid AND e.item_code = b.trgt_item_code
    WHERE
    d.use_yn = 'Y'
    AND c.use_yn = 'Y'
    AND a.obj_uuid IN
    <foreach item='uuid' collection='objUuids' open='(' separator=',' close=")">
      #{uuid}
    </foreach>
    AND e.obj_code IS NOT NULL
  </select>

  <insert id="saveOfferComponentRelation">
    INSERT INTO tb_offer_strc_d (
        base_uuid,
        trgt_uuid,
        valid_start_dtm,
        valid_end_dtm,
        rgst_user,
        rgst_dtm,
        upd_user,
        upd_dtm
    )
    VALUES (
        #{offerUuid},
        #{objUuid},
        #{relationValidStartDtm}::TIMESTAMP,
        #{relationValidEndDtm}::TIMESTAMP,
        #{rgstUser},
        CURRENT_TIMESTAMP,
        #{updUser},
        CURRENT_TIMESTAMP
    )
    ON CONFLICT (base_uuid, trgt_uuid)
    DO UPDATE SET
        valid_start_dtm = EXCLUDED.valid_start_dtm,
        valid_end_dtm = EXCLUDED.valid_end_dtm,
        upd_user = EXCLUDED.upd_user,
        upd_dtm = CURRENT_TIMESTAMP
  </insert>

  <select id="getComponentListAddForOffer"
          resultType="com.lgcns.svcp.prod.ui.prod.dto.offer.structure.listAddComponent.ComponentPagingDto">
    SELECT
    objUUID,
    objCode,
    objName,
    itemCode,
    componentType,
    validStartDtm,
    validEndDtm
    FROM (
    SELECT DISTINCT
    im.obj_uuid AS objUUID,
    im.obj_code AS objCode,
    im.obj_name AS objName,
    im.item_code AS itemCode,
    i.mctgr_item_code AS componentType,
    im.valid_start_dtm AS validStartDtm,
    im.valid_end_dtm AS validEndDtm,
    im.rgst_dtm,
    im.upd_dtm
    FROM tb_item_mpng_d im
    LEFT JOIN tb_item_c i ON im.item_code = i.item_code
    JOIN tb_item_strc_d tisd ON im.item_code = tisd.trgt_item_code
    JOIN tb_item_mpng_d timd ON timd.item_code = tisd.base_item_code
    AND timd.obj_uuid = #{offerUUID}
    WHERE
    i.lctgr_item_code = 'C'
    AND NOT EXISTS (
    SELECT 1
    FROM tb_offer_strc_d osd
    WHERE osd.trgt_uuid = im.obj_uuid
    AND osd.base_uuid = #{offerUUID}
    )
    AND (im.valid_end_dtm::TIMESTAMP >= CURRENT_TIMESTAMP OR im.valid_end_dtm IS NULL)
    <if test="objCode != null">
      AND im.obj_code LIKE <![CDATA[ '%' || UPPER(#{objCode}) || '%']]>
    </if>
    <if test="objName != null">
      AND UPPER(im.obj_name) LIKE <![CDATA[ '%' || UPPER(#{objName}) || '%']]>
    </if>
    <if test="itemCode != null">
      AND i.item_code = #{itemCode}
    </if>
    <if test="componentType != null">
      AND i.mctgr_item_code = #{componentType}
    </if>
    ORDER BY im.rgst_dtm DESC, im.upd_dtm DESC
    ) t
  </select>

  <resultMap id="retrieveOffersAdvancedWithDetailResultMap" type="com.lgcns.svcp.prod.ui.prod.dto.offer.search.OfferSearchRes">
    <collection property="general"  column="{objUuid=obj_uuid}" select="Ui-item.retrieveGeneral"/>
    <collection property="additional"  column="{objUuid=obj_uuid}" select="getOfferAdditionalDetail"/>
  </resultMap>

  <select id="retrieveOffersAdvancedWithDetail" resultMap="retrieveOffersAdvancedWithDetailResultMap">
    <include refid="queryOffersAdvanced"/>
  </select>

  <resultMap id="retrieveOffersAdvancedResultMap" type="com.lgcns.svcp.prod.ui.prod.dto.offer.search.OfferSearchRes">
    <collection property="additional"  column="{objUuid=obj_uuid}" select="getOfferAdditionalDetail"/>
  </resultMap>

  <select id="retrieveOffersAdvanced" resultMap="retrieveOffersAdvancedResultMap">
    <include refid="queryOffersAdvanced"/>
  </select>

  <select id="searchOffersAdvanced" resultType="com.lgcns.svcp.prod.ui.prod.dto.offer.search.OfferSearchRes">
    <include refid="queryOffersAdvanced"/>
  </select>

  <sql id="queryOffersAdvanced">
    SELECT DISTINCT
    a.obj_uuid
    , a.obj_code
    , a.obj_name
    , a.item_code
    , a.valid_start_dtm
    , a.valid_end_dtm
    , a.dplc_trgt_uuid
    , a.chg_dept_name
    , a.chg_user
    , a.ovw_cntn
    , a.rgst_user
    , a.rgst_dtm
    , a.upd_user
    , a.upd_dtm
    , b.lctgr_item_code
    , b.mctgr_item_code
    FROM tb_item_mpng_d a
    JOIN tb_item_c b  ON a.item_code = b.item_code
    <where>
      b.lctgr_item_code = 'O'
      <if test="mctgrItemCode != null and mctgrItemCode != 'ALL'">
        AND b.mctgr_item_code = #{mctgrItemCode}
      </if>
      <if test="itemCode != null and itemCode != 'ALL'">
        AND a.item_code = #{itemCode}
      </if>
      <if test="objCode != null">
        AND UPPER(a.obj_code) LIKE <![CDATA[ '%' || UPPER(#{objCode}) || '%']]>
      </if>
      <if test="objName != null">
        AND UPPER(a.obj_name) LIKE <![CDATA[ '%' || UPPER(#{objName}) || '%']]>
      </if>
      <if test="additional != null and additional.size() > 0">
        AND
        <foreach collection='additional' item='param'  open='(' separator=') AND (' close=")">
          EXISTS (
          SELECT 1 FROM tb_add_attr_header_m c
          LEFT JOIN tb_offer_add_attr_val_d d ON c.attr_uuid = d.attr_uuid AND d.obj_uuid = a.obj_uuid
          WHERE c.item_code = a.item_code
          AND
          c.attr_uuid = #{param.fieldName}
          <if test="param.fieldValue != null and param.fieldType == 'TF' or param.fieldType == 'TA'">
            AND UPPER(d.attr_val) LIKE <![CDATA[ '%' || UPPER(#{param.fieldValue}) || '%']]>
          </if>
          <if test="param.fieldValues != null and param.fieldType == 'DL'">
            AND d.attr_val IN
            <foreach collection='param.fieldValues' item='value' open='(' separator=',' close=")">
              #{value}
            </foreach>
          </if>
          <if test="param.fieldValues != null and param.fieldType == 'DM'">
           AND EXISTS (
	          SELECT 1
	          FROM tb_multi_code_add_attr_val_d tmcaavd
	          WHERE tmcaavd.attr_uuid = c.attr_uuid
	            AND tmcaavd.obj_uuid = a.obj_uuid
	            AND tmcaavd.attr_val IN
            <foreach collection='param.fieldValues' item='val' open='(' separator=',' close=")">
              #{val}
            </foreach>
            )
          </if>
          <if test="param.fieldType == 'DP'">
              <if test="param.fieldValueMin != null and param.fieldValueMin != ''">
                  AND d.attr_val::timestamp >= #{param.fieldValueMin}::timestamp
              </if>
              <if test="param.fieldValueMax != null and param.fieldValueMax != ''">
                  AND d.attr_val::timestamp <![CDATA[ <= ]]> #{param.fieldValueMax}::timestamp
              </if>
          </if>
          <if test="param.fieldType == 'RF' or param.fieldType == 'NF'">
              <if test="param.fieldValueMin != null and param.fieldValueMin != ''">
                  AND d.attr_val ~ '^[0-9]+\.?[0-9]+$'
                  AND CAST(d.attr_val AS NUMERIC) >= CAST(#{param.fieldValueMin} AS NUMERIC) -- Compare with min value
                  AND d.attr_val IS NOT NULL -- Ensure attr_val is not null
              </if>
              <if test="param.fieldValueMax != null and param.fieldValueMax != ''">
                  AND d.attr_val ~ '^[0-9]+\.?[0-9]+$'
                  AND CAST(d.attr_val AS NUMERIC) <![CDATA[ <= ]]> CAST(#{param.fieldValueMax} AS NUMERIC) -- Compare with max value
                  AND d.attr_val IS NOT NULL -- Ensure attr_val is not null
              </if>
          </if>
          )
        </foreach>
      </if>
    </where>
  </sql>

  <select id="retreiveStructureInfo"
          resultType="com.lgcns.svcp.prod.ui.prod.dto.offer.structure.OfferStructureDetailRes">
    SELECT c.mctgr_item_code
         , c.mctgr_item_name
         , string_agg(CASE
                        WHEN a.strc_type_code = 'M' THEN a.trgt_item_code
                        ELSE NULL
                        END
      , ',' ORDER BY a.trgt_item_code) AS m_accept_code
         , string_agg(CASE
                        WHEN a.strc_type_code = 'S' THEN a.trgt_item_code
                        ELSE NULL
                        END
      , ',' ORDER BY a.trgt_item_code) AS s_accept_code
         , MIN(c.sort_no)                AS c_sort_no
         , MIN(b.sort_no)                AS b_sort_no
    FROM tb_item_strc_d a
           JOIN tb_item_c b ON a.trgt_item_code = b.item_code
           JOIN tb_mctgr_item_c c ON b.mctgr_item_code = c.mctgr_item_code
    WHERE a.base_item_code = #{itemCode}
      AND c.use_yn = 'Y'
      AND b.use_yn = 'Y'
    GROUP BY c.mctgr_item_code
           , c.mctgr_item_name
    ORDER BY MIN(c.sort_no)
           , MIN(b.sort_no)
  </select>

</mapper>